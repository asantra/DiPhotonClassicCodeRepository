1. Step 1: Set up the environment

    > setenv SCRAM_ARCH slc6_amd64_gcc481
    > cmsrel CMSSW_7_1_5 ### must be a 7_1_X release  >= 7_1_5;  (7.0.X and 7.2.X are NOT supported either) 
    > cd CMSSW_7_1_5/src 
    > cmsenv
    > git clone https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit.git HiggsAnalysis/CombinedLimit
    > cd HiggsAnalysis/CombinedLimit
    > git fetch origin
    > git checkout v5.0.3   # try v5.0.1 if any issues occur
    > scramv1 b clean; scramv1 b # always make a clean build, as scram doesn't always see updates to src/LinkDef.h

Step 2: Write data cards

    > cd macro
    
    * Copy WriteLimitCommands.C, SignalExpectation_NewNtuples.root, and counting_t5gg_XXX_YYY.txt to local directory
    * Run WriteLimitCommands.C to create the instructions to make the data cards
    * Run limitCommands.sh to create the data cards
    * Use the t6gg version for t6gg signal point limits. 
    * You may have to put counting_t5/6gg_*.txt in counting_file folder

Step 3: Compute limits

    * For quick runs it's fine to use the the asymptotic CLs method. Typically I make a bash script with many commands of the form:

    combine -M Asymptotic counting_t5gg_1000_100.txt > limit_t5gg_1000_100.txt
    * You can run the bash script: step3.sh. Here counting_t5/6gg*.txt should be in counting_file folder. The output of the limit
    is inside limit_files folder

Step 4: Create limit histograms
    * first you need to write ExpLimMid.C, ExpLimUp.C, ExpLimDown.C with proper output root file names and histogram declaration.
    * Run step4a.sh, step4b.shm tep4c.sh and step4d.sh. They will create histograms from the output of combine limit command
    
Step 5: Draw limit canvas

    * Copy DrawLimitCanvas.C and SusyCrossSections13TeVGluGlu.txt to local directory
    * Run DrawLimitCanvas.C, the result should be a nice-looking limit canvas.
    * Ue t6gg version for t6gg limit
